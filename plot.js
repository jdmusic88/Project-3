//================================Create Placeholder Plot===================================
var container = document.getElementById('plot');
year_list = ['1960', '1961', '1962', '1963', '1964', '1965', '1966',
    '1967', '1968', '1969', '1970', '1971', '1972', '1973', '1974', '1975',
    '1976', '1977', '1978', '1979', '1980', '1981', '1982', '1983', '1984',
    '1985', '1986', '1987', '1988', '1989', '1990', '1991', '1992', '1993',
    '1994', '1995', '1996', '1997', '1998', '1999', '2000', '2001', '2002',
    '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011',
    '2012', '2013', '2014', '2015', '2016', '2017'];
var data = {
    categories: year_list,
    series: [{name: 'Biomass',data: [1319.871, 1294.762, 1300.242, 1323.316, 1336.802, 1334.761, 1368.986, 1340.249, 1419.494, 1440.488, 1430.962, 1432.323, 1503.065, 1529.068, 1539.661, 1498.733, 1713.373, 1838.332, 2037.605, 2151.906, 2471.691, 2599.746, 2664.743, 2904.414, 2971.603, 3016.233, 2932.095, 2877.576, 3016.049, 3159.354, 2736.982, 2781.799, 2931.673, 2906.004, 3027.532, 3101.141, 3156.805, 3102.838, 2927.489, 2963.292, 3008.229, 2625.395, 2698.515, 2804.726, 3004.599, 3100.638, 3228.406, 3438.829, 3811.465, 3898.016, 4471.839, 4493.64, 4390.792, 4633.408, 4783.103, 4757.01, 4717.757, 4798.494]},
            {name: 'Coal',data: [9830.513, 9618.013, 9904.585, 10414.512, 10967.543, 11582.398, 12145.291, 11917.043, 12337.535, 12383.168, 12268.895, 11603.202, 12109.53, 12960.121, 12651.009, 12655.613, 13575.89, 13907.111, 13769.684, 15041.652, 15460.982, 15937.724, 15269.049, 15867.06, 17013.578, 17540.071, 17240.884, 17949.877, 18885.663, 19055.165, 19167.682, 18989.14, 19117.802, 19836.126, 19903.559, 20098.843, 21002.157, 21443.603, 21583.324, 21582.103, 22575.538, 21906.355, 21902.852, 22322.634, 22464.302, 22793.45, 22444.214, 22747.914, 22382.816, 19691.342, 20828.382, 19663.856, 17380.923, 18038.771, 17996.577, 15548.985, 14227.138, 13839.632]},
            {name: 'Distillate Fuel Oil',data: [3991.686, 4044.624, 4266.259, 4352.755, 4371.22, 4519.117, 4644.739, 4765.724, 5094.19, 5244.026, 5401.004, 5657.916, 6210.091, 6574.759, 6267.211, 6061.326, 6679.498, 7125.886, 7296.139, 7039.256, 6110.279, 6014.173, 5678.583, 5719.725, 6065.095, 6097.767, 6196.291, 6328.356, 6655.121, 6711.705, 6422.08, 6209.922, 6350.84, 6466, 6717.543, 6811.839, 7168.372, 7297.919, 7351.882, 7586.69, 7927.311, 8170.353, 8019.781, 8340.797, 8641.615, 8744.885, 8830.605, 8858.242, 8346.459, 7656.512, 8010.589, 8211.183, 7897.088, 8051.055, 8492.328, 8402.506, 8169.609, 8262.728]},
            {name: 'HGL',data: [865.979, 891.189, 973.31, 1052.341, 1124.312, 1170.101, 1234.196, 1312.301, 1459.731, 1677.845, 1667.021, 1700.297, 1926.804, 1959.397, 1913.592, 1811.302, 1876.549, 1866.666, 1848.145, 2213.81, 2135.452, 2097.818, 2095.195, 1983.33, 2229.597, 2251.994, 2158.232, 2338.968, 2372.88, 2403.475, 2258.53, 2465.872, 2594.761, 2557.188, 2776.857, 2790.65, 2951.06, 2955.644, 2808.928, 3193.382, 3215.645, 2894.642, 3006.338, 2905.269, 2975.834, 2811.649, 2767.835, 2834.784, 2655.804, 2706.885, 2884.846, 2798.965, 2892.775, 3166.263, 3066.017, 3224.058, 3177.612, 3280.362]},
            {name: 'Hydroelectric Power',data: [1607.975, 1656.464, 1816.141, 1771.354, 1886.314, 2059.077, 2061.519, 2346.664, 2348.629, 2647.982, 2633.548, 2824.15, 2863.865, 2861.448, 3176.58, 3154.607, 2976.265, 2333.252, 2936.983, 2930.686, 2900.144, 2757.968, 3265.558, 3527.26, 3385.811, 2970.192, 3071.179, 2634.508, 2334.265, 2837.263, 3046.391, 3015.943, 2617.436, 2891.613, 2683.457, 3205.307, 3589.656, 3640.457, 3297.054, 3267.575, 2811.116, 2241.858, 2689.017, 2792.539, 2688.468, 2702.942, 2869.035, 2446.389, 2511.108, 2668.824, 2538.541, 3102.852, 2628.702, 2562.382, 2466.577, 2321.177, 2472.442, 2766.969]},
            {name: 'Jet Fuel', data: [738.522, 826.805, 976.887, 1043.682, 1120.761, 1214.502, 1353.654, 1670.229, 1941.094, 2016.832, 1972.743, 2060.819, 2140.842, 2167.221, 2030.373, 2047.083, 2025.995, 2126.482, 2163.806, 2203.632, 2190.406, 2062.194, 2071.522, 2140.915, 2413.72, 2496.888, 2682.354, 2842.819, 2981.766, 3058.904, 3129.491, 3025.005, 3001.33, 3028.007, 3154.499, 3132.195, 3274.239, 3308.167, 3356.783, 3461.781, 3580.35, 3425.975, 3340.318, 3265.457, 3382.535, 3474.752, 3379.382, 3357.61, 3192.839, 2883.274, 2962.87, 2949.817, 2901.435, 2968.557, 3042.091, 3204.168, 3349.876, 3481.346]},
            {name: 'Motor Gas excl Ethanol', data: [7630.802, 7751.568, 8050.79, 8309.962, 8464.411, 8805.625, 9218.658, 9506.785, 10114, 10595.275, 11090.916, 11531.738, 12259.336, 12797.127, 12534.588, 12797.511, 13415.29, 13760.444, 14210.988, 13487.461, 12647.895, 12630.56, 12537.986, 12696.942, 12867.019, 13097.625, 13486.741, 13815.858, 14105.067, 14050.036, 13871.812, 13780.951, 13972.523, 14141.364, 14359.802, 14680.047, 14967.231, 15126.904, 15559.439, 15888.68, 15990.592, 16201.234, 16618.766, 16715.286, 17022.752, 17022.388, 17058.027, 16859.024, 15999.412, 15801.249, 15570.293, 15110.405, 15021.605, 15240.281, 15361.358, 15788.432, 16050.927, 16002.227]},
            {name: 'Natural Gas', data: [12385.366, 12926.392, 13730.841, 14419.107, 15297.642, 15779.457, 17005.781, 17964.988, 19204.569, 20657.964, 21692.71, 22365.248, 22682.497, 22595.346, 21729.561, 19977.076, 20381.227, 19972.477, 20067.662, 20687.615, 20226.934, 19749.623, 18367.053, 17212.02, 18389.567, 17713.531, 16603.236, 17646.792, 18460.278, 19607.316, 19627.801, 20033.047, 20723.809, 21255.357, 21757.307, 22720.621, 23151.345, 23372.324, 22911.552, 22925.26, 23815.293, 22747.645, 23513.541, 22822.564, 22927.283, 22567.132, 22225.318, 23670.821, 23836.273, 23421.003, 24568.039, 24953.771, 26075.691, 26788.768, 27376.838, 28179.686, 28392.79, 28042.043]},
            {name: 'Nuclear Electric Power', data: [6.026, 19.678, 26.394, 38.147, 39.819, 43.164, 64.158, 88.456, 141.534, 153.722, 239.347, 412.939, 583.752, 910.177, 1272.083, 1899.798, 2111.121, 2701.762, 3024.126, 2775.827, 2739.169, 3007.589, 3131.148, 3202.549, 3552.531, 4075.563, 4380.109, 4753.933, 5586.968, 5602.161, 6104.35, 6422.132, 6479.206, 6410.499, 6693.877, 7075.436, 7086.674, 6596.992, 7067.809, 7610.256, 7862.349, 8028.853, 8145.429, 7959.622, 8222.774, 8160.81, 8214.626, 8458.589, 8426.491, 8355.22, 8434.433, 8268.698, 8061.822, 8244.433, 8337.559, 8336.886, 8426.753, 8418.968]},
            {name: 'Other Petroleum', data: [3129.471, 3204.314, 3298.708, 3497.534, 3672.894, 3784.081, 3944.823, 3919.077, 4154.63, 4248.913, 4311.869, 4321.896, 4562.544, 4830.798, 4619.11, 4332.237, 4699.547, 5155.896, 5464.015, 5646.393, 5304.096, 4288.756, 3857.739, 4195.855, 4266.615, 4164.025, 4372.408, 4590.909, 4888.397, 4796.699, 4999.132, 4651.464, 5031.334, 4920.222, 5106.526, 4976.158, 5279.544, 5552.398, 5611.351, 5701.366, 5352.186, 5533.979, 5531.513, 5714.795, 6135.898, 6062.485, 6126.746, 5815.221, 5165.391, 4618.088, 4712.648, 4610.774, 4392.562, 4454.535, 4315.174, 4381.315, 4432.824, 4450.985]},
            {name: 'Other Renewables', data: [0.3589999999999236, 1.0009999999999764, 1.0609999999999218, 1.7609999999999673, 2.132999999999811, 1.9779999999996107, 1.958000000000311, 3.2999999999999545, 4.53200000000038, 6.423000000000002, 5.511000000000422, 5.73900000000026, 15.079000000000178, 20.422000000000253, 25.609999999999673, 33.77899999999977, 37.51299999999992, 37.38200000000029, 30.851000000000113, 40.26200000000017, 52.69900000000007, 59.4380000000001, 50.628000000000156, 63.93799999999965, 80.93299999999954, 97.59199999999964, 107.86600000000044, 112.41499999999996, 106.44000000000005, 238.04599999999982, 258.5210000000002, 270.0450000000001, 271.44200000000046, 281.75000000000045, 276.1640000000002, 252.92000000000053, 265.93200000000024, 268.34500000000025, 266.7819999999997, 283.8450000000007, 284.92500000000064, 295.75199999999995, 336.4780000000005, 345.14999999999964, 378.1859999999997, 416.6840000000002, 505.6940000000004, 591.8979999999997, 812.1889999999994, 999.4909999999995, 1222.6889999999994, 1492.375, 1710.6119999999992, 2039.8890000000001, 2279.4429999999993, 2415.763000000001, 2875.2079999999996, 3330.0120000000006]},
            {name: 'Residual Fuel', data: [3517.193, 3449.539, 3431.526, 3388.215, 3486.651, 3690.538, 3938.365, 4098.401, 4201.219, 4538.736, 5056.559, 5268.789, 5819.543, 6476.723, 6055.739, 5649.322, 6445.105, 7047.268, 6936.026, 6485.399, 5771.629, 4790.883, 3938.868, 3260.463, 3151.038, 2758.987, 3254.887, 2901.476, 3170.377, 3143.921, 2819.852, 2657.037, 2518.138, 2478.725, 2342.454, 1954.697, 1952.12, 1828.228, 2035.724, 1904.948, 2090.597, 1861.449, 1605.429, 1771.853, 1989.729, 2111.118, 1580.734, 1658.894, 1431.707, 1172.89, 1227.92, 1058.058, 848.525, 731.008, 590.192, 595.09, 750.655, 784.14]}]
};
var options = {
    chart: {
        width: 1200,
        height: 600,
        title: 'Energy Consumption in the U.S. Over Time'
    },
    yAxis: {
        title: 'Billion BTUs',
    },
    xAxis: {
        title: 'Year',
        pointOnColumn: true,
        dateFormat: 'YYYY',
        tickInterval: 'auto'
    },
    series: {
        showDot: false,
        zoomable: true
    },
    tooltip: {
        //suffix: 'Â°C'
    },
    plot: {
        //bands: [
            //{
                //range: ['03/01/2016', '05/01/2016'],
                //color: 'gray',
                //opacity: 0.2
            //}
        //],
        lines: [
            {
                value: '03/01/2016',
                color: '#fa2828'
            }
        ]
    }
};
var theme = {
    series: {
        colors: [
            '#83b14e', '#458a3f', '#295ba0', '#2a4175', '#289399',
            '#289399', '#617178', '#8a9a9a', '#516f7d', '#1F618D',
            '#D35400', '#2C3E50'
        ]
    }
};
// For apply theme
// tui.chart.registerTheme('myTheme', theme);
// options.theme = 'myTheme';
//var chart = tui.chart
//chart.destroy();
var chart = tui.chart.lineChart(container, data, options);
//chart.destroy();
//========================Read in Data from csv and create plot from dropdown========================
//var container2 = document.getElementById('plot');
var data = d3.csv("cleaned_energy_source_state.csv").then(function(energyData) {
    //console.log(energyData);
    year_list = ['1960', '1961', '1962', '1963', '1964', '1965', '1966',
    '1967', '1968', '1969', '1970', '1971', '1972', '1973', '1974', '1975',
    '1976', '1977', '1978', '1979', '1980', '1981', '1982', '1983', '1984',
    '1985', '1986', '1987', '1988', '1989', '1990', '1991', '1992', '1993',
    '1994', '1995', '1996', '1997', '1998', '1999', '2000', '2001', '2002',
    '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011',
    '2012', '2013', '2014', '2015', '2016', '2017'];

    d3.selectAll("#selDataset").on("change", getData);

    function getData() {
        //chart.destroy();

        //define the dropdown menu
        var dropdownMenu = d3.select("#selDataset");
  
        // Assign the value of the dropdown menu option to a variable
        var state = dropdownMenu.property("value");
        console.log(state);
  
        //filter the samples data to get the entry where the dropdown value matches the patiend id
        var stateData = energyData.filter(data => data.State == state);
        console.log(stateData);
        
        timeBiomass = [];
        timeCoal = [];
        timeDistillate = [];
        timeHGL = [];
        timeHydroelectric = [];
        timeJet = [];
        timeMotor = [];
        timeNatural = [];
        timeNuclear = [];
        timeOtherPet = [];
        timeOtherRenewable = [];
        timeResidual = [];
        for (var i = 0; i < year_list.length; i++) {
           var yearData = stateData.map(energy => energy[year_list[i]]);
           //console.log(yearData);
           var biomass = yearData[0]/1000;
           timeBiomass.push(biomass);
           var coal = yearData[1]/1000;
           timeCoal.push(coal);
           var distillate = yearData[2]/1000;
           timeDistillate.push(distillate);
           var hgl = yearData[3]/1000;
           timeHGL.push(hgl);
           var hydroelectric = yearData[4]/1000;
           timeHydroelectric.push(hydroelectric);
           var jet = yearData[5]/1000;
           timeJet.push(jet);
           var motor = yearData[6]/1000;
           timeMotor.push(motor);
           var natural = yearData[7]/1000;
           timeNatural.push(natural);
           var nuclear = yearData[8]/1000;
           timeNuclear.push(nuclear);
           var other_pet = yearData[9]/1000;
           timeOtherPet.push(other_pet);
           var total_renewable = yearData[10]/1000;
           var residual_fuel = yearData[11]/1000;
           timeResidual.push(residual_fuel);
           var other_renewable = total_renewable-hydroelectric-biomass
           timeOtherRenewable.push(other_renewable);
        };//completes year for loop
        //console.log(timeCoal);
        //================Create Plot================================
        //var container = document.getElementById('plot');
        var data = {
            categories: year_list,
            series: [{name: 'Biomass',data: timeBiomass},
                    {name: 'Coal',data: timeCoal},
                    {name: 'Distillate Fuel Oil',data: timeDistillate},
                    {name: 'HGL',data: timeHGL},
                    {name: 'Hydroelectric Power',data: timeHydroelectric},
                    {name: 'Jet Fuel', data: timeJet},
                    {name: 'Motor Gas excl Ethanol', data: timeMotor},
                    {name: 'Natural Gas', data: timeNatural},
                    {name: 'Nuclear Electric Power', data: timeNuclear},
                    {name: 'Other Petroleum', data: timeOtherPet},
                    {name: 'Other Renewables', data: timeOtherRenewable},
                    {name: 'Residual Fuel', data: timeResidual}]
        };
        const options = {
            chart: {
                width: 1200,
                height: 600,
                title: 'Energy Consumption by Type Over Time'
            },
            yAxis: {
                title: 'Trillion BTUs',
            },
            xAxis: {
                title: 'Year',
                pointOnColumn: true,
                dateFormat: 'YYYY',
                tickInterval: 'auto'
            },
            series: {
                showDot: false,
                zoomable: true
            },
            tooltip: {
                //suffix: 'Â°C'
            },
            plot: {
                //bands: [
                    //{
                        //range: ['03/01/2016', '05/01/2016'],
                        //color: 'gray',
                        //opacity: 0.2
                    //}
                //],
                lines: [
                    {
                        value: '03/01/2016',
                        color: '#fa2828'
                    }
                ]
            }
        };
        var theme = {
            series: {
                colors: [
                    '#83b14e', '#458a3f', '#295ba0', '#2a4175', '#289399',
                    '#289399', '#617178', '#8a9a9a', '#516f7d', '#1F618D',
                    '#D35400', '#2C3E50'
                ]
            }
        };
        // For apply theme
        // tui.chart.registerTheme('myTheme', theme);
        // options.theme = 'myTheme';
        var container = document.getElementById('plot');
        var chart = tui.chart;
        //chart.destroy();
        chart.lineChart(container, data, options);
        //chart.destroy();
    };

});//this bracket ends the d3 call for the csv data...

console.log("hello");